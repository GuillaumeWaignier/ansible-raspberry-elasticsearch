- type: http # monitor type `http`. Connect via HTTP an optionally verify response
  # ID used to uniquely identify this monitor in elasticsearch even if the config changes
  id: nginx-http-monitor

  # Human readable display name for this service in Uptime UI and elsewhere
  name: Nginx HTTP Monitor

  # Name of corresponding APM service, if Elastic APM is in use for the monitored service.
  #service.name: my-apm-service-name

  # Enable/Disable monitor
  enabled: true

  # Configure task schedule
  schedule: '@every 60s'

  # Configure URLs to ping
  hosts: ["https://192.168.2.15:443"]

  check.response.status: [401]

  # Configure IP protocol types to ping on if hostnames are configured.
  # Ping all resolvable IPs if `mode` is `all`, or only one IP if `mode` is `any`.
  ipv4: true
  ipv6: true
  mode: any

  ssl:
    # Certificate Authorities
    #certificate_authorities: ['']

    # Required TLS protocols
    supported_protocols: ["TLSv1.0", "TLSv1.1", "TLSv1.2"]

    # Request settings:
    #check.request:
    # Configure HTTP method to use. Only 'HEAD', 'GET' and 'POST' methods are allowed.
    #method: "GET"

    # Dictionary of additional HTTP headers to send:
    #headers:

    # Optional request body content
    #body:


  # The tags of the monitors are included in their own field with each
  # transaction published. Tags make it easy to group servers by different
  # logical properties.
  #tags: ["service-X", "web-tier"]

  # Optional fields that you can specify to add additional information to the
  # monitor output. Fields can be scalar values, arrays, dictionaries, or any nested
  # combination of these.
  #fields:
  #  env: staging

  # If this option is set to true, the custom fields are stored as top-level
  # fields in the output document instead of being grouped under a fields
  # sub-dictionary. Default is false.
  #fields_under_root: false
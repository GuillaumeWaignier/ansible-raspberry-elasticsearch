---

- name: Add {{ group }} group
  group:
    name: "{{ group }}"
    state: present
- name: Create {{ user }} user
  user:
    name: "{{ user }}"
    group: "{{ group }}"
    createhome: no
    shell: /bin/bash
    state: present
- name: Create {{ base_directory }} directory
  file:
    path: "{{ base_directory }}"
    state: directory
    mode: 0755
    owner: "root"
    group: "root"


- name: Create sub-directory
  file:
    path: "{{ base_directory }}/{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ user }}"
    group: "{{ group }}"
  with_items:
    - metricbeat
    - metricbeat/config
    - metricbeat/config/modules.d
    - metricbeat/data
  notify: restart_metricbeat

- name: Create log directory
  file:
    path: "/var/log/metricbeat"
    state: directory
    mode: 0755
    owner: "{{ user }}"
    group: "{{ group }}"
  notify: restart_metricbeat

- name: Download metricbeat for x86_64 with version {{ version }}
  get_url:
    url: "https://artifacts.elastic.co/downloads/beats/metricbeat/metricbeat-{{ version }}-linux-x86_64.tar.gz"
    dest: "{{ base_directory }}/metricbeat/metricbeat-{{ version }}.tar.gz"
    force: yes
    mode: '0644'
    owner: "{{ user }}"
    group: "{{ group }}"
  when: ansible_architecture == "x86_64"

- name: Download metricbeat for aarch64 with version {{ version }}
  get_url:
    url: "https://artifacts.elastic.co/downloads/beats/metricbeat/metricbeat-{{ version }}-linux-arm64.tar.gz"
    dest: "{{ base_directory }}/metricbeat/metricbeat-{{ version }}.tar.gz"
    force: yes
    mode: '0644'
    owner: "{{ user }}"
    group: "{{ group }}"
  when: ansible_architecture == "aarch64"

- name: Extract metricbeat
  unarchive:
    src: "{{ base_directory }}/metricbeat/metricbeat-{{ version }}.tar.gz"
    dest: "{{ base_directory }}/metricbeat"
    owner: "{{ user }}"
    group: "{{ group }}"
    remote_src: yes
  notify: restart_metricbeat

- name: Retrieve directory name after extraction of the archive
  shell:
    cmd: "ls -d {{ base_directory }}/metricbeat/metricbeat-{{ version }}*/ | sed 's/.$//'"
  register: directory_name
  changed_when: false

- name: Symlink for metricbeat
  file:
    src: "{{ directory_name.stdout }}"
    path: "{{ base_directory }}/metricbeat/metricbeat"
    state: link
    force: yes
    owner: "{{ user }}"
    group: "{{ group }}"
  notify: restart_metricbeat

- name: Configure general conf for metricbeat
  template:
    src: templates/{{ item }}.j2
    dest: "{{ base_directory }}/metricbeat/config/{{ item }}"
    owner: "{{user}}"
    group: "{{group}}"
    mode: 0644
  with_items:
    - metricbeat.yml
    - modules.d/system.yml
  notify: restart_metricbeat

- name: Configure elasticsearch for metricbeat
  template:
    src: templates/{{ item }}.j2
    dest: "{{ base_directory }}/metricbeat/config/{{ item }}"
    owner: "{{user}}"
    group: "{{group}}"
    mode: 0644
  with_items:
    - modules.d/elasticsearch-xpack.yml
  notify: restart_metricbeat
  when: "'elasticsearch' in group_names"

- name: Configure kibana for metricbeat
  template:
    src: templates/{{ item }}.j2
    dest: "{{ base_directory }}/metricbeat/config/{{ item }}"
    owner: "{{user}}"
    group: "{{group}}"
    mode: 0644
  with_items:
    - modules.d/kibana-xpack.yml
  notify: restart_metricbeat
  when: "'kibana' in group_names"


- name: Add Healthcheck script for metricbeat
  template:
    src: "metricbeat-healthcheck.sh.j2"
    dest: "{{ base_directory }}/metricbeat/metricbeat-healthcheck.sh"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0744
  notify: restart_metricbeat

- name: Service systemD for metricbeat
  template:
    src: templates/metricbeat.service.j2
    dest: /etc/systemd/system/metricbeat.service
    owner: root
    group: root
    mode: 0644
  notify: restart_metricbeat
- name: Enable service metricbeat
  systemd:
    enabled: yes
    daemon_reload: yes
    name: metricbeat.service
...